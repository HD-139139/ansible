- name: MySQL Deployment
  hosts: 192.168.200.101
  vars_files: 
    - vars-test/deployment-test-vars.yaml
  tasks:
    - name: Database in Debian
      block:
        - name: Install MySQL Package
          apt:
            update_cache: true
            name: mysql-server, python3-pymysql
            state: present
        - name: Starting MySQL Service
          service:
            name: mysql
            state: started
            enabled: yes
        - name: Create Wordpress Database
          mysql_db:
            login_unix_socket: "{{ db['socket'] }}"
            name: "{{ db['db'] }}"
            state: present
        - name: Create Wordpress User
          mysql_user:
            check_implicit_admin: yes
            login_unix_socket: "{{ db['socket'] }}"
            name: "{{ db['user'] }}"
            password: "{{ db['password'] }}"
            host: localhost
            priv: wpdb.*:ALL,GRANT
            state: present
      when: ansible_facts['os_family'] == "Debian"
    - name: Database in RedHat
      block:
        - name: Install MariaDB Package
          yum:
            update_cache: true
            name: mariadb-server, python3-pymysql
            state: present
        - name: Starting Maria Service
          service:
            name: mariadb
            state: started
        - name: Create Wordpress Database
          mysql_db:
            login_unix_socket: "{{ db['socket'] }}"
            name: "{{ db['db'] }}"
            state: present
            enabled: yes
        - name: Create Wordpress User
          mysql_user:
            check_implicit_admin: yes
            login_unix_socket: "{{ db['socket'] }}"
            name: "{{ db['user'] }}"
            password: "{{ db['password'] }}"
            host: localhost              
            priv: wpdb.*:ALL,GRANT
            state: present
      when: ansible_facts['os_family'] == "RedHat"


- name: Wordpress Deployment
  hosts: 192.168.200.102
  vars_files: 
    - vars-test/deployment-test-vars.yaml
  tasks: 
    - name: Install Apache2 Package in Debian
      block: 
        - name: Download Wordpress Source
          get_url:
            url: "{{ wp['source_url'] }}"
 #        checksum: "{{ wp['source_hash'] }}"
            dest: "{{ wp['source_file'] }}"
          async: 300
          poll: 0
          register: download_result
        - name: Install Apache2 Package
          apt: 
            name: apache2, php, php-mysql, php-gd, php-mbstring
            state: present
        - name: Change Apache2 Service Ports
          template:
            src: jinja/ports.conf.j2
            dest: /etc/apache2/ports.conf
          notify: 
            - Restart apache2
        - name: Starting Apache2 Service
          service: 
            name: apache2
            state: started
            enabled: yes
        - name: Check on an async Wordpress Source
          async_status: 
            jid: "{{ download_result.ansible_job_id  }}"
          register: job_result
          until: job_result.finished
          retries: 100
          delay: 5
        - name: Unarchive Wordpress Source
          unarchive: 
            src: "{{ wp['source_file'] }}"
            remote_src: true
            dest: /var/www/html
        - name: Copy & Setting Wordpress Database Configuration
          template: 
            src: jinja/wp-config.php.j2
            dest: "{{ wp['config_file'] }}"
        - name: Change Apache2 Service Ports
          template: 
            src: jinja/ports.conf.j2
            dest: /etc/apache2/ports.conf
          notify: 
            - Restart apache2
      when: ansible_facts['os_family'] == "Debian"

    - name: Install Apache2 Package in RedHat
      block: 
        - name: Download Wordpress Source
          get_url:
            url: "{{ wp['source_url'] }}"
 #      checksum: "{{ wp['source_hash'] }}"
            dest: "{{ wp['source_file'] }}"
          async: 300
          poll: 0
          register: download_result
        - name: Install Httpd Package
          apt: 
            name: httpd, php, php-mysql, php-gd, php-mbstring
            state: present
        - name: Starting Httpd Service
          service:
            name: httpd
            state: started
            enabled: yes
        - name: Check on an async Wordpress Source
          async_status: 
            jid: "{{ downlaod_result.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 100
          delay: 5
        - name: Unarchive Wordpress Source
          unarchive: 
            src: "{{ wp['source_file'] }}"
            remote_src: true
            dest: /var/www/html
        - name: Copy & Setting Wordpress Database Configuration
          template: 
            src: jinja/wp-config.php.j2
            dest: "{{ wp['config_file'] }}"
        - name: Change Httpd Service Ports
          template: 
            src: jinja/ports.conf.j2
            dest: /etc/httpd/conf/https.conf
          notify: 
            - Restart httpd
      when: ansible_facts['os_family'] == "RedHat"

  handlers: 
    - name: Restart apache2
      service: 
        name: apache2
        state: restarted
    - name: Restart httpd
      service:
        name: httpd
        state: restarted
